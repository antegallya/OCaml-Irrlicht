INTRODUCTION

The Irrlicht Engine is an open source high performance realtime 3D engine
written and usable in C++. It is completely cross-platform, using D3D, OpenGL
and its own software renderer, and has all of the state-of-the-art features
which can be found in commercial 3d engines.

See : http://irrlicht.sourceforge.net/

Caml is a general-purpose programming language, designed with program safety
and reliability in mind. It is very expressive, yet easy to learn and use. Caml
supports functional, imperative, and object-oriented programming styles. It has
been developed and distributed by INRIA, a French research institute in computer
science and applied mathematics, since 1985.

See : http://caml.inria.fr/index.en.html

PROJECT WEB PAGE

http://projects.tuxfamily.org/group.pl?name=ocamlirr

Here you can find the online documentation and the last sources in the GIT
repository.
 
REQUIRE

Irrlicht (it should work on 1.7.x) : http://irrlicht.sourceforge.net/
OCaml : http://caml.inria.fr/index.en.html
g++ : http://gcc.gnu.org/
findlib : http://projects.camlcity.org/projects/findlib.html (recommended)

You can still build and use Ocaml Irrlicht without findlib but you will then
have to install it manually and it will be hader to compile programs. In
particular the Makefiles of the examples will not work.
 
Right know the build system has been created for Unix/Linux, and so, Windows is
yet supported. However, you should not have to do too many modifications to
built it under Windows. If you do, it would be very kind of you to send the
modifications.

BUILD AND INSTALL

To build OCaml Irrlicht just type

make

in the main directory

To install the library just type (as a superuser or with sudo)

make install

To uninstall it :

make uninstall

As you can see on the Makefile, the installation just consists in installing
an ocamlfind package named irrlicht.

BUILD AND RUN THE EXAMLPLES

To build an example, go in its directory and type

make

then to execute it, just type

./main

Because the examples are based on the official Irrlicht ones, to run them, you
will need some media files (*.md2 *.bsp etc ...).

The media files are distributed with the official Irrlicht distribution

http://irrlicht.sourceforge.net/downloads.html

You just have to build a symbolique lynk "media" in the main directory

USE THE LIBRARY

Currently, there are no tutorials for OCaml Irrlicht, so if you are new you can
still :

- Read the code of the examples
- Read the official Irrlicht tutorials (each example is base on an official
example/tutorial)
- Read the documentation
(generated by ocamldoc, see _build/ocaml-irrlicht.docdir/index.html or
http://ocamlirr.tuxfamily.org/)

EXTEND THE BINDING

Ocaml Irrlicht is far from complete so if you want to do a real application, you
will probably have to wrap a few functions/methods.

For most Irrlicht Objects in the binding, there is a method obj that returns
a pointer to the C++ object.

CONTACT

If you have any questions or request for binding a particular function/method
you contact me at :

alexis.bernadet  ate noos.fr

Or you can also use the mailing list :

ocamlirr@lists.tuxfamily.org
